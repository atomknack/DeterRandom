//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Random_Common
//     Changes will be lost if the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------

using System;
using DeterRandom.Seeds;

namespace DeterRandom;

public sealed partial class RandomXs256ss
{
    private static readonly RandomXs256ss _shared = Create(42);
    public static RandomXs256ss Shared { get => _shared; }

    public override AbstractRandom<Xoroshiro256ss> CreateFromCurrentState() => 
        new RandomXs256ss(_seed);

    private RandomXs256ss(Xoroshiro256ss seed): base(seed) { }
    private RandomXs256ss(Xoroshiro256ss initial, Xoroshiro256ss current): base(initial, current) { }
    public override bool Equals(object obj) => obj is RandomXs256ss otherSeed && Equals(otherSeed);
    public bool Equals(RandomXs256ss other) => _initialSeed.Equals(other._initialSeed) && _seed.Equals(other._seed);
    public override int GetHashCode() => _seed.GetHashCode();
    public override string ToString() => $"(initial:{_initialSeed}, _seed:{_seed})";
}


