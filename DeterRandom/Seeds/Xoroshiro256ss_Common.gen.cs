//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Seed_Common
//     Changes will be lost if the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------

using System;

namespace DeterRandom.Seeds;

public readonly partial struct Xoroshiro256ss
{
    private readonly ulong _s0;
    private readonly ulong _s1;
    private readonly ulong _s2;
    private readonly ulong _s3;

    public ulong CurrentPseudoNextSeed(out Xoroshiro256ss nextSeedPlaceholder)
    {
        ulong result = CurrentPseudoRandomNoSeedChange();
        NextSeed(out nextSeedPlaceholder);
        return result;
    }

    public void NextSaltedSeed(out Xoroshiro256ss nextSeedPlaceholder, ulong salt)
    {
        ulong s0 = _s0;
        ulong s1 = _s1;
        ulong s2 = _s2;
        ulong s3 = _s3;
        NextSeed(ref s0, ref s1, ref s2, ref s3);
        SaltMaker.SaltXoroshiro256ss(ref s0, ref s1, ref s2, ref s3, SaltMaker.ValueToSalty(salt));
        nextSeedPlaceholder = new Xoroshiro256ss(s0, s1, s2, s3);
    }

    public void NextSeed(out Xoroshiro256ss nextSeedPlaceholder)
    {
            ulong s0 = _s0;
            ulong s1 = _s1;
            ulong s2 = _s2;
            ulong s3 = _s3;
        NextSeed(ref s0, ref s1, ref s2, ref s3);
        //SaltMaker.SaltXoroshiro256ss(ref s0, ref s1, ref s2, ref s3, SaltMaker.ValueToSalty(salt));
        nextSeedPlaceholder = new Xoroshiro256ss(s0, s1, s2, s3);
    }

    public Xoroshiro256ss CreateIdenticalCopy() => 
        new Xoroshiro256ss(_s0, _s1, _s2, _s3);

    private Xoroshiro256ss(ulong s0, ulong s1, ulong s2, ulong s3)
    {
        _s0 = s0;
        _s1 = s1;
        _s2 = s2;
        _s3 = s3;
    }

    public bool Equals(Xoroshiro256ss other) => _s0 == other._s0 && _s1 == other._s1 && _s2 == other._s2 && _s3 == other._s3;
    public override bool Equals(object obj) => obj is Xoroshiro256ss otherSeed && Equals(otherSeed);
    public override int GetHashCode() => _s0.GetHashCode();
    public override string ToString() => $"(s0:{ _s0 }, s1:{ _s1 }, s2:{ _s2 }, s3:{ _s3 })";

}



